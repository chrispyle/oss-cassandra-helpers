<?xml version="1.0" encoding="UTF-8"?>
<schema name="demosolrtable" version="1.5">
	<types>
		<fieldType name="long" class="solr.TrieLongField"
			precisionStep="0" omitNorms="true" positionIncrementGap="0" />
		<fieldType name="int" class="solr.TrieIntField"
			precisionStep="0" omitNorms="true" positionIncrementGap="0" />

		<!-- General text for exactish matching -->
		<fieldType name="text_general" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.KeywordTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.WordDelimiterFilterFactory"
					splitOnCaseChange="1" splitOnNumerics="1" generateWordParts="1"
					generateNumberParts="1" catenateWords="1" catenateNumbers="1"
					catenateAll="1" preserveOriginal="1" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.KeywordTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.WordDelimiterFilterFactory"
					splitOnCaseChange="1" splitOnNumerics="1" generateWordParts="1"
					generateNumberParts="1" catenateWords="1" catenateNumbers="1"
					catenateAll="1" preserveOriginal="1" />
			</analyzer>
		</fieldType>

		<!-- NGram text -->
		<fieldType name="text_ngram" class="solr.TextField"
			positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.KeywordTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.WordDelimiterFilterFactory"
					splitOnCaseChange="1" splitOnNumerics="1" generateWordParts="1"
					generateNumberParts="1" catenateWords="1" catenateNumbers="1"
					catenateAll="1" preserveOriginal="1" />
				<filter class="solr.NGramFilterFactory" minGramSize="1"
					maxGramSize="30" />
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.KeywordTokenizerFactory" />
				<filter class="solr.LowerCaseFilterFactory" />
				<filter class="solr.WordDelimiterFilterFactory"
					splitOnCaseChange="1" splitOnNumerics="1" generateWordParts="1"
					generateNumberParts="1" catenateWords="1" catenateNumbers="1"
					catenateAll="1" preserveOriginal="1" />
			</analyzer>
		</fieldType>
	</types>
	<fields>
		<field name="id" type="long" indexed="true" stored="true" />
		<field name="json" type="text_ngram" indexed="true" stored="true" />
	</fields>

	<defaultSearchField>id</defaultSearchField>
	<uniqueKey>id</uniqueKey>
</schema>